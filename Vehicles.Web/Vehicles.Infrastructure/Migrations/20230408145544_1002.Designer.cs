// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehicles.Infrastructure.Classes;

#nullable disable

namespace Vehicles.Infrastructure.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20230408145544_1002")]
    partial class _1002
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicles.Domain.Classes.BaseClasses.VehicleWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LightOn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VehicleWarehouses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("VehicleWarehouse");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Boat", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Classes.BaseClasses.VehicleWarehouse");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Boat");
                });

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Bus", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Classes.BaseClasses.VehicleWarehouse");

                    b.Property<int>("Wheel")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Car", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Classes.BaseClasses.VehicleWarehouse");

                    b.Property<int>("Wheel")
                        .HasColumnType("int");

                    b.ToTable("VehicleWarehouses", t =>
                        {
                            t.Property("Wheel")
                                .HasColumnName("Car_Wheel");
                        });

                    b.HasDiscriminator().HasValue("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
