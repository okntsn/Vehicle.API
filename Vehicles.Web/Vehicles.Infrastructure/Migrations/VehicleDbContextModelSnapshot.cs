// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehicles.Infrastructure.Classes;

#nullable disable

namespace Vehicles.Infrastructure.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LightOn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Boats");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            Color = "white",
                            LightOn = false
                        });
                });

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LightOn")
                        .HasColumnType("bit");

                    b.Property<int>("Wheel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Color = "yellow",
                            LightOn = true,
                            Wheel = 6
                        },
                        new
                        {
                            Id = 5,
                            Color = "blue",
                            LightOn = false,
                            Wheel = 8
                        });
                });

            modelBuilder.Entity("Vehicles.Domain.Classes.DbClasses.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LightOn")
                        .HasColumnType("bit");

                    b.Property<int>("Wheel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "black",
                            LightOn = false,
                            Wheel = 4
                        },
                        new
                        {
                            Id = 2,
                            Color = "red",
                            LightOn = true,
                            Wheel = 4
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
